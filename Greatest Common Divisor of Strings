https://leetcode.com/problems/greatest-common-divisor-of-strings/

class Solution {
public:
    /*str1 = ABCABC  str2 = ABC
    n = 6, m = 3
    gcd = (6,3) -> 3
    if(ABCABCABC != ABCABCABC) since this condition is true we run loop till the gcd of substr 
    i   0->3
    0 < 3  if(str1[0] == str2[0])ans = "" + A;
    1 < 3 if(str1[1] == str2[1])ans = A + B;
    2 < 3 if(str1[2] == str2[2])ans = AB + C;
    3 < 3  false
    return  ABC  */
    
    string gcdOfStrings(string str1, string str2) {
        int n = str1.size();
        int m = str2.size();
        string ans = "";
        int gcd = __gcd(n,m);//actually finding substring
        
        if(str1 + str2 != str2 + str1)return ans;
        
        for(int i=0;i<gcd;i++){
            if(str1[i] == str2[i]){
                ans = ans + str1[i];
            }
        }
        return ans;
    }
};
